# takes an image & returns bird's eye view

https://towardsdatascience.com/a-social-distancing-detector-using-a-tensorflow-object-detection-model-python-and-opencv-4450a431238
https://towardsdatascience.com/monitoring-social-distancing-using-ai-c5b81da44c9f


m = cv2.getPerspectiveTransform(src, dst)  # calculates the transform
result = cv2.perspectiveTransform(src[None, :, :], m)   # applies it on the image



# https://stackoverflow.com/questions/27585355/python-open-cv-perspectivetransform
# https://stackoverflow.com/questions/34116357/what-is-the-difference-between-warpperspective-and-perspectivetransform

# https://www.pyimagesearch.com/2014/08/25/4-point-opencv-getperspective-transform-example/
# http://pyimg.co/guide

google: cv2 perspectiveTransform vs getPerspectiveTransform vs warpPerspective



