1. CVAT
https://github.com/opencv/cvat
MIT License
The data (Images Uploaded is stored in The uploaded data is stored in the  docker volume)
Ref: https://github.com/opencv/cvat/blob/develop/cvat/apps/documentation/faq.md#where-are-uploaded-imagesvideos-stored
Easy to use


2. VGG Image Annotator (VIA)
http://www.robots.ox.ac.uk/~vgg/software/via/
BSD-2 clause
Data Should be Uploaded to the Platform .It is running as a offline application in most modern web browsers.
https://gitlab.com/vgg/via/-/tree/master
Easy To Use as it a Simple Html File, to Annotate the Objects


3. VOTT ( Visual Object Tagging Tools (VOTT) )
https://github.com/microsoft/VoTT/blob/master/LICENSE
MIT License
Developed By Microsoft. To use the web-app version, We need our data to be hosted on Azure, the cloud computing service of Microsoft 
(however, the electron version allows us to use data on our hard drive disk but we need to install it with npm).
https://www.sicara.ai/blog/2019-09-01-top-five-open-source-annotation-tools-computer-vision
UI is good but exporting to YOLO is not supported.


4. Scalable AI
https://github.com/ucbdrive/scalabel
Apache 2.0 License
Data Can be kept in local or can be pushed to Amazon S3.
https://www.scalabel.ai/doc/data-preparation.html
UI is good


ref:
https://medium.com/@ashamohana/image-annotation-tools-2f9b58eecade
https://prodi.gy/
https://forums.fast.ai/t/image-annotation-tool/30773/6



#####################################################################################


images from different spectra


Flexible deployment model (Hybrid, Cloud, Edge) - Optimize for edge processing


Independent code modules for Image Uploads, Model training, Inferencing
Use of Dockers for customized deployments based on the DL platform
Audit Trail for Model Building


Easy-to-use navigation
Dashboard KPIs to quickly understand status / analytics
Segregated user personas for different tasks


Choice of algorithm, based on requirement and annotations available (anomaly detection , classification, detection)
Choose the Model Architecture and modify the hyperparameters
Continuous learning: Accommodate new classes and update existing models - Automated Model Drift detection; 
                     raise re-training request (deployment only after vetting, HIL)
Integrated data labeling tool
Custom image pre-processing, post-processing (resize, tile, file compression formats, etc)
     Algorithm Intelligence to detect & correct image quality (vibration correction, poor light, other interference)
     Detect & remove corrupt images


Workflow management

Integrated camera registration and configuration, for easier data collection & metadata tagging
PLC integration , AR/VR integration *




CHALLENGES:
Data imbalance
Different scale of item of interest 
Different image sizes
Large intra-class variations, less inter-class variations






